What happens when you initialize a repository? Why do you need to do it?

It creates a .git directory to start tracking your changes and configuration.

How is the staging area different from the working directory and the repository? What value do you think it offers?

A staging area allows you to have local files on your machine in development you can work on without pushing it o production.

How can you use the staging area to make sure you have one commit per logical change?

You can save a file and use git add to put it in the staging area and then git commit the commit the change after a logical update.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When trying something experimental, adding a new language, or simply adding a new feature

How do the diagrams help you visualize the branch structure?

It allows me to see and better understand the various branches and commmits to each branch. This makes it easier to understand which branch code is being committed to.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

You merge a feature into the master branch and get rid of a branch. We represent it this way because it is a feature and developed independantly of the master branch.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

The pro is that if the same lines of code are not touched it is quick and easy to automatically merge. The downside being that if the same code was altered git would have to fige out which to keep which would be hard. You'll want to do it manually so you don't commit the wrong code.